"""
Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные
и заполнять список только числами. Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
При этом скрипт завершается, сформированный список с числами выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число)
и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.
"""


class NonNumException(Exception):
    def __init__(self, message):
        self.message = message


elements = []
while True:
    element = input('\nВведите число для внесения в список или s для выхода: ')
    if element == 's' or element == 'ы' or element == 'S':
        break

    try:
        tmp_num = element
        if '-' in tmp_num:
            tmp_num = tmp_num.strip('-')
        if '.' in tmp_num:
            tmp_num = float(tmp_num)
            elements.append(element)
            print(f'число {element} внесено в список')
            # print(f'\n{elements}')
        elif tmp_num.isnumeric():
            elements.append(element)
            print(f'число {element} внесено в список')
            # print(f'\n{elements}')
        else:
            raise NonNumException('Ошибка: введено не число - не вносится в список.')
    except NonNumException as err:
        print(err)
    except ValueError:
        print('Ошибка: введено некорректное значение.')

print('Итоговый список:', *elements, sep='  ')
