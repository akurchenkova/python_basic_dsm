"""
4. Программа принимает действительное положительное число x и целое отрицательное число y.
Необходимо выполнить возведение числа x в степень y.
Задание необходимо реализовать в виде функции my_func(x, y).
При решении задания необходимо обойтись без встроенной функции возведения числа в степень.

Подсказка: попробуйте решить задачу двумя способами.
Первый — возведение в степень с помощью оператора **.
Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
"""


def my_func_simple(x, y):
    """
    Легкий вариант.
    Возведение в степень с помощью оператора **,
    проверку на > 0, 0 >, int тут я не расписывала

    """
    return x ** y


def my_func_simple2(x, y):
    """
    Легкий вариант 2.
    Возведение в степень без оператора ** но со встроенной функцией pow,
    проверку на > 0, 0 >, int тут я не расписывала

    """
    return pow(x, y)


def my_func(x, y):
    """
    Функция возведения в отрицательную степень без оператор ** и встроенных функций, только с *
    с округлением до 5 знаков после запятой

    """
    if y != int(y):
        print('Ошибка. Аргумент "y" должен быть целым')
    elif not y < 0:
        print('Ошибка. Аргумент "y" должен быть отрицательным')
    elif not x >= 1:
        print('Ошибка. Аргумент "х" должен быть положительным')
    else:
        result = 1
        for n in range(0, abs(int(y))):
            result *= x
            # print(result)
        print("x^-y: ", round(1 / result, 5))


def my_func_du(x, y):
    """
    Вспомогательная часть функции возведения в степень
    # x в квадрате = сложить число столько раз сколько само число
    # х в кубе = (x + x + x) + (x + x + x) + (x + x + x) то есть x в степни y=3
    # x в степени y =  (сложить число столько раз сколько само число) и сложить эту сумму y раз
    """
    tmp_result = 0
    for i in range(y - 1):
        tmp_result += x
        # print('tmp_result', tmp_result)
    return tmp_result


def my_func_ver2(x, y):
    """
    Функция возведения в отрицательную степень без умножения c округлением до 3 знаков
    """
    if y != int(y):
        print('Ошибка. Аргумент "y" должен быть целым')
    elif not y < 0:
        print('Ошибка. Аргумент "y" должен быть отрицательным')
    elif not x >= 1:
        print('Ошибка. Аргумент "х" должен быть положительным')
    else:
        result = 1
        for n in range(0, int(abs(y))):
            result += my_func_du(result, x)
            # print('result', result)
        negative = round(1 / result, 3)
        return f'{x} в степени {y}: ', negative


print('x в степени y (simple ver1):', my_func_simple(3, -4))
print('x в степени y (simple ver2):', my_func_simple2(3, -4))
# my_func(2, 0.5)
# my_func(0, -0)
# my_func(-2, -1)
# my_func(2, -1/1)
# my_func(2, -1)
my_func(3, -4)
# print(my_func_ver2(3, -1/1))
print(my_func_ver2(3, -4))
